// Generated by CoffeeScript 1.9.2
(function() {
  var app, express, io, max_messages, port, redis, redisClient, server, storeMessage;

  express = require('express');

  app = express();

  server = require('http').createServer(app);

  io = require('socket.io')(server);

  redis = require('redis');

  redisClient = redis.createClient();

  port = 8080;

  max_messages = 10;

  server.listen(port, function() {
    return console.log('Server listening at port %d', port);
  });

  app.use(express["static"](__dirname + '/public'));

  storeMessage = function(username, message) {
    var data;
    data = JSON.stringify({
      username: username,
      message: message
    });
    return redisClient.lpush("messages", data, function() {
      return redisClient.ltrim("messages", 0, max_messages);
    });
  };

  io.on('connection', function(socket) {
    var addedUser, showOldMessages;
    console.log('new connection!');
    addedUser = false;
    showOldMessages = function() {
      return redisClient.lrange("messages", 0, -1, function(err, messages) {
        var i, len, message, ref, results;
        console.log("allmes: " + messages);
        ref = messages.reverse();
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          message = ref[i];
          results.push(socket.emit("new message", JSON.parse(message)));
        }
        return results;
      });
    };
    socket.on('add user', function(username) {
      showOldMessages();
      socket.username = username;
      redisClient.sadd("users", username);
      addedUser = true;
      socket.emit('login', username);
      socket.broadcast.emit("announcement", socket.username + " has joined the chat...");
      return console.log("server: USERNAME ENTERED: " + username);
    });
    socket.on('new message', function(message) {
      storeMessage(socket.username, message);
      return socket.broadcast.emit('new message', {
        username: socket.username,
        message: message
      });
    });
    return socket.on('disconnect', function(username) {
      if (socket.username) {
        socket.broadcast.emit("announcement", socket.username + " has left the chat...");
        return redisClient.srem("users", socket.username);
      }
    });
  });

}).call(this);
